%
~( Ackermann - Peter function

A m,n = | n+1                if m = 0
        | A m-1, n           if n = 0
        | A m-1, A m, n-1    in other cases

In order to compute A 4, 1 adapt the stack sizes in conf.h to
  #define STACK_SIZE 3000000
  #define R_STACK_SIZE 3000000
)


~\ for backward recursion
:<A> ,;

:A-0-n ~( m n ) ^1 + nip ,;
:A-m-0 ~( m n ) ^drop 1 - 1 <A> ,;

:A ~( m n - A)^
  ^over               ~\ m n m
  `A-0-n ,if-not;     ~\ m=0  or  m n
  ^dup                ~\ m n n
  `A-m-0 ,if-not;     ~\ n=0  or  m n
  ^over               ~\ m n m
  ^1 -                ~\ m n m-1
  ^-rot               ~\ m-1 m n
  ^1 -                ~\ m-1 m n-1
  ^<A>                ~\ m-1 A(m, n-1)
  ^A
,;

~\ <A> is redefined to A to allow backward recursion
'A '<A> ~is

~2 10 A .

bye

~( Results
  0 4 A .   5           0.008 secs
  2 10 A .  23          0.009 secs
  3 1 A .   13          0.010 secs
  3 2 A .   29          0.007 secs
  3 3 A .   61          0.008 secs
  3 4 A .   125         0.008 secs
  3 8 A .   2045        0.107 secs
  3 10 A .  8189        1.633 secs
  3 11 A .  16381       6.388 secs
  3 12 A .  32765      24.970 secs

  4 0 A .   13          0.008 secs
  4 1 A .   65533     105.092 secs
)
