(one line comment)
:\ ^key 10 = when ; ^\ ;

::2R> ^R> R> ;
::2>R ^>R >R ;

::2dup ^dup dup ;
::2drop ^drop drop ;

::1+ ^1 + ;
::1- ^1 - ;

::;; ^R> drop ;

:times (xt n -) ^over execute 1- dup when times 2drop ;

:cr ^10 emit ;
:tab ^9 emit ;

:dumpc ^ 2>R dup c@ . tab 1+ 2R> ;
:dumpl ^ 2>R 'dumpc ^12 times cr 2R> ;
:dump  (a -) 'dumpl ^10 times ;

:alloc ^here @ swap over + here ! ;

(create null-terminated string)
:"init ^here @ cell + ;
:"loop ^dup key dup 34 ^= when ; ^swap c! 1 + "loop ;
:"done ^drop drop here @ - dup (null ^1 + alloc swap over ! ;
:" ^"init "loop "done ;

(print string)
:."init ^dup dup @ + swap cell + ;
:."loop ^over over = when ; ^dup c@ emit 1 + ."loop ;
:." ^."init ."loop cr ;

:cmd ^cell + system ;

:true   ^1 ;
:false  ^0 ;
:on     ,true ^;
:off    ,false ^;
